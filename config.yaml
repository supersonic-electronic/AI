# PDF Ingestion Configuration
# Default settings for pdf2txt.py script

# Directory Paths
input_dir: "./data/papers"          # Directory containing PDF files to process
text_dir: "./data/text"             # Directory for extracted text files (.txt)
meta_dir: "./data/metadata"         # Directory for metadata JSON files

# Logging Configuration
log_level: "INFO"                   # Logging level: DEBUG, INFO, WARNING, ERROR
log_to_file: true                   # Whether to log to file in addition to console
log_file: "./logs/pdf_ingestion.log"  # Log file path (if log_to_file is true)

# DOI Extraction
doi_regex: "10\\.[0-9]{4,}[-._;()/:a-zA-Z0-9]*"  # Regex pattern for DOI extraction
doi_prefixes:                       # Additional DOI prefixes to search for
  - "doi:"
  - "DOI:"
  - "https://doi.org/"
  - "http://dx.doi.org/"

# Processing Options
parallel_workers: 4                 # Number of parallel workers for PDF processing
skip_existing: false                # Skip files that already have output (.txt/.json)
show_progress: true                 # Show progress bar during processing

# PyMuPDF Text Extraction Options
preserve_reading_order: true        # Use sort=True in get_text() for reading order
warn_empty_pages: true             # Log warnings for empty pages
include_images: false              # Extract image information (future feature)
pdf_chunk_size: 0                  # Pages per chunk for large PDFs (0 = no chunking)

# Mathematical Formula Extraction
extract_math: true                 # Enable enhanced mathematical formula extraction
math_ocr_fallback: false          # Use OCR fallback for complex formulas (requires OpenAI API)
separate_math_files: true         # Save mathematical blocks to separate .math files
math_dir: "./data/math"           # Directory for mathematical formula files
openai_api_key: ""                # OpenAI API key for math OCR (optional)
math_detection_threshold: 3       # Minimum score for mathematical content detection (default: 3)

# File Handling
encoding: "utf-8"                  # Text file encoding
json_indent: 2                     # JSON file indentation for readability
overwrite_existing: true           # Overwrite existing output files

# Document Chunking and Embedding Configuration
chunk_size: 500                    # Target size for text chunks (characters)
chunk_overlap: 50                  # Overlap between adjacent chunks (characters)
embedding_model: "text-embedding-3-small"  # OpenAI embedding model
embedding_batch_size: 30           # Number of texts to embed per batch
max_retries: 3                     # Maximum retry attempts for embedding requests
retry_delay: 1.0                   # Base delay between retries (seconds)

# Vector Store Configuration - Pinecone
pinecone_api_key: ""               # Pinecone API key
pinecone_index_name: "document-embeddings"  # Pinecone index name
pinecone_environment: "us-east-1-aws"       # Pinecone environment

# Vector Store Configuration - Chroma (Local)
chroma_persist_directory: "./data/chroma_db"   # Local Chroma database directory
chroma_collection_name: "document_embeddings"  # Chroma collection name