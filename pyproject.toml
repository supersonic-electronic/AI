[project]
name = "ai"
version = "0.1.0"
description = ""
authors = [
    {name = "supersonic-electronic",email = "jinkazama232@protonmail.com"}
]
readme = "README.md"
requires-python = ">=3.9, <4.0"
package-mode = false
dependencies = [
    "black (>=25.1.0,<26.0.0)",
    "fitz (>=0.0.1.dev2,<0.0.2)",
    "pymupdf (>=1.26.3,<2.0.0)",
    "pyyaml (>=6.0.2,<7.0.0)",
    "tqdm (>=4.67.1,<5.0.0)",
    "langchain (>=0.3.26,<0.4.0)",
    "openai (>=1.95.1,<2.0.0)",
    "pillow (>=11.3.0,<12.0.0)",
    "jsonschema (>=4.24.0,<5.0.0)",
    "pinecone-client (>=3.0.0,<4.0.0)",
    "chromadb (>=0.4.0,<1.0.0)",
    "langchain-text-splitters (>=0.3.0,<0.4.0)",
    "pydantic (>=2.0.0,<3.0.0)",
    "pytest (>=7.0.0,<8.0.0)",
    "pytest-asyncio (>=0.21.0,<1.0.0)",
    "pytest-mock (>=3.10.0,<4.0.0)",
    "python-docx (>=1.1.0,<2.0.0)",
    "beautifulsoup4 (>=4.12.0,<5.0.0)",
    "lxml (>=5.0.0,<6.0.0)",
    "watchdog (>=4.0.0,<5.0.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "numpy (<2.0)",
    "scikit-learn (<1.5)",
    "fastapi (>=0.104.0,<1.0.0)",
    "uvicorn (>=0.24.0,<1.0.0)",
    "jinja2 (>=3.1.2,<4.0.0)",
    "python-multipart (>=0.0.6,<1.0.0)",
    "aiofiles (>=23.2.0,<24.0.0)",
    "click (>=8.0.0,<9.0.0)",
    "sphinx (>=7.0.0,<8.0.0)",
    "sphinx-rtd-theme (>=2.0.0,<3.0.0)",
    "myst-parser (>=2.0.0,<3.0.0)",
    "safety (>=3.0.0,<4.0.0)",
    "requests (>=2.32.4,<3.0.0)",
    "sparqlwrapper (>=2.0.0,<3.0.0)",
    "ebooklib (>=0.18,<1.0.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.3.0"
mypy = "^1.11.0"
pytest-cov = "^6.0.0"
sphinx = "^7.0.0"
sphinx-rtd-theme = "^2.0.0"
myst-parser = "^2.0.0"
pre-commit = "^4.0.0"
bandit = "^1.7.0"
pydocstyle = "^6.3.0"
pyupgrade = "^3.15.0"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"

[project.entry-points."project.plugins"]
# Built-in document extractors
pdf = "src.ingestion.extractors.pdf:PDFExtractor"
html = "src.ingestion.extractors.html:HTMLExtractor"
docx = "src.ingestion.extractors.docx:DOCXExtractor"
xml = "src.ingestion.extractors.xml:XMLExtractor"
latex = "src.ingestion.extractors.latex:LaTeXExtractor"
epub = "src.ingestion.extractors.epub:EPUBExtractor"

# Example plugin entries - actual plugins would be added here
# pdf_enhanced = "my_plugins.extractors:EnhancedPDFExtractor"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]